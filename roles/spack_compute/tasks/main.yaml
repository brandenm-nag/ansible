---
# Disabling system compiler - we'll only install GCC 9 into spack for now
#- name: Spack config compiler
#  command: /mnt/shared/spack/bin/spack compiler find --scope=system

- name: Spack config compiler
  command: /mnt/shared/spack/bin/spack compiler find --scope=system /opt/rh/gcc-toolset-9/root

- name: Spack config externals
  command: /mnt/shared/spack/bin/spack external find --scope=system --not-buildable
  when:
    ansible_local.citc.csp != "aws"

#- name: Spack config externals (aws)
#  command: /mnt/shared/spack/bin/spack external find --scope=system --not-buildable
#  environment:
#    PATH: "/opt/amazon/openmpi/bin:{{ ansible_env.PATH }}"
#  when:
#    ansible_local.citc.csp == "aws"



# spack config add packages:libfabric:externals:/opt/amazon/efa/
- name: Detect Libfabric version
  shell: "/opt/amazon/efa/bin/fi_info --version | awk '/libfabric:/{print $2}'"
  register: spack_libfabric_version
  when:
    ansible_local.citc.csp == "aws"

- name: Register EFA Libfabric with Spack
  copy:
    content: |
      packages:
        libfabric:
          externals:
          - spec: libfabric@{{spack_libfabric_version.stdout}}
            prefix: /opt/amazon/efa
          buildable: false
    dest: /tmp/libfabric.yaml
  when:
     ansible_local.citc.csp == "aws"
 
- name: Spack note EFA Libfabric - import
  command: /mnt/shared/spack/bin/spack config --scope system add -f /tmp/libfabric.yaml
  when:
     ansible_local.citc.csp == "aws"

- name: Spack note EFA Libfabric - delete
  file:
    path: /tmp/libfabric.yaml
    state: absent
  when:
     ansible_local.citc.csp == "aws"
# spack build OpenMPI:  openmpi +pmi schedulers=slurm +legacylaunchers fabrics=ofi arch={{ansible_architecture}}

- name: Spack mark cmake as buildable
  command: /mnt/shared/spack/bin/spack config --scope system add packages:cmake:buildable:true

- name: Spack note SLURM existence - create
  template:
    src: external_slurm.yaml.j2
    dest: /tmp/external_slurm.yaml

- name: Spack note SLURM existence - import
  command: /mnt/shared/spack/bin/spack config --scope system add -f /tmp/external_slurm.yaml

- name: Spack note SLURM existence - delete
  file:
    path: /tmp/external_slurm.yaml
    state: absent


# Enable GCC as "buildable"
- name: Spack mark GCC as buildable
  command: /mnt/shared/spack/bin/spack config add packages:gcc:buildable:true
  become_user: citc

#- name: Build GCC 10
#  command: /mnt/shared/spack/bin/spack install gcc@10.2.0 +binutils arch={{ ansible_architecture }}
#  become_user: citc
#
#- name: Find GCC 10
#  command: /mnt/shared/spack/bin/spack location -i gcc@10.2.0 arch={{ ansible_architecture }}
#  register: spack_gcc10_dir
#
#- name: Register new GCC with Spack
#  command: /mnt/shared/spack/bin/spack compiler find --scope system {{ spack_gcc10_dir.stdout }}
#
#- name:  Default new GCC
#  command: /mnt/shared/spack/bin/spack config --scope system add "packages:all:compiler:[gcc@10.2.0 arch={{ansible_architecture}}]"
#
#- name: Spack remove mark GCC as buildable
#  command: /mnt/shared/spack/bin/spack config remove packages:gcc:buildable:true
#  become_user: citc
#

# Build our own MPI (AWS uses EFA-provided libfabric)


- name: Build OpenMPI (GCP)
  command: /mnt/shared/spack/bin/spack install openmpi +pmi schedulers=slurm +legacylaunchers fabrics={{"ofi" if ansible_local.citc.csp == "aws" else "auto"}} arch={{ansible_architecture}}
  become_user: citc

- name: Find OpenMPI location
  command: /mnt/shared/spack/bin/spack location -i openmpi arch={{ ansible_architecture }}
  register: spack_ompi_dir

- name: Find OpenMPI spec
  command: /mnt/shared/spack/bin/spack find --format="{name}@{version}%{compiler.name}@{compiler.version} arch={arch.target}" openmpi arch={{ ansible_architecture }}
  register: spack_ompi_spec


- name: Register OpenMPI with Spack
  copy:
    content: |
      packages:
        mpi:
          buildable: false
        openmpi:
          externals:
          - spec: {{spack_ompi_spec.stdout}}
            prefix: {{spack_ompi_dir.stdout}}
          buildable: false
    dest: /tmp/ompi.yaml
 
- name: Spack note OpenMPI - import
  command: /mnt/shared/spack/bin/spack config --scope system add -f /tmp/ompi.yaml

- name: Spack note OpenMPI - delete
  file:
    path: /tmp/ompi.yaml
    state: absent



- name: Add Spack to default shells
  copy:
    dest: /etc/profile.d/99-spack.sh
    content: |
      . /opt/rh/gcc-toolset-9/enable
      . /mnt/shared/spack/share/spack/setup-env.sh
    owner: root
    mode: u=rwx,g=rx,o=rx
    force: no
