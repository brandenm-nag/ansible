---

- name: Spack config compiler
  command: /mnt/shared/spack/bin/spack compiler find --scope=system

- name: Spack config externals
  command: /mnt/shared/spack/bin/spack external find --scope=system --not-buildable
  when:
    ansible_local.citc.csp != "aws"

- name: Spack config externals (aws)
  command: /mnt/shared/spack/bin/spack external find --scope=system --not-buildable
  environment:
    PATH: "/opt/amazon/openmpi/bin:{{ ansible_env.PATH }}"
  when:
    ansible_local.citc.csp == "aws"


- name: Spack mark cmake as buildable
  command: /mnt/shared/spack/bin/spack config --scope system add packages:cmake:buildable:true

- name: Spack note SLURM existence - create
  template:
    src: external_slurm.yaml.j2
    dest: /tmp/external_slurm.yaml

- name: Spack note SLURM existence - import
  command: /mnt/shared/spack/bin/spack config --scope system add -f /tmp/external_slurm.yaml

- name: Spack note SLURM existence - delete
  file:
    path: /tmp/external_slurm.yaml
    state: absent


# Temporarily enable GCC as "buildable"
- name: Spack mark GCC as buildable
  command: /mnt/shared/spack/bin/spack config add packages:gcc:buildable:true
  become_user: citc

- name: Build GCC 10
  command: /mnt/shared/spack/bin/spack install gcc@10.2.0 +binutils arch={{ ansible_architecture }}
  become_user: citc

- name: Find GCC 10
  command: /mnt/shared/spack/bin/spack location -i gcc@10.2.0 arch={{ ansible_architecture }}
  register: spack_gcc10_dir

- name: Register new GCC with Spack
  command: /mnt/shared/spack/bin/spack compiler find --scope system {{ spack_gcc10_dir.stdout }}

- name:  Default new GCC
  command: /mnt/shared/spack/bin/spack config --scope system add "packages:all:compiler:[gcc@10.2.0 arch={{ansible_architecture}}]"

- name: Spack remove mark GCC as buildable
  command: /mnt/shared/spack/bin/spack config remove packages:gcc:buildable:true
  become_user: citc
#
# Stuff for GCP - Build our own MPI (AWS uses EFA-provided OpenMPI)
- name: Build OpenMPI (GCP)
  command: /mnt/shared/spack/bin/spack install openmpi +pmi schedulers=slurm +legacylaunchers fabrics=auto arch={{ansible_architecture}}
  become_user: citc
  when:
    ansible_local.citc.csp == "google"

- name: Find OpenMPI location
  command: /mnt/shared/spack/bin/spack location -i openmpi%gcc@10.2.0 arch={{ ansible_architecture }}
  register: spack_ompi_dir
  when:
    ansible_local.citc.csp == "google"

- name: Find OpenMPI spec
  command: /mnt/shared/spack/bin/spack find --format="{name}@{version}%{compiler.name}@{compiler.version} arch={arch.target}" openmpi%gcc@10.2.0 arch={{ ansible_architecture }}
  register: spack_ompi_spec
  when:
    ansible_local.citc.csp == "google"


- name: Register OpenMPI with Spack
  copy:
    content: |
      packages:
        mpi:
          buildable: false
        openmpi:
          externals:
          - spec: {{spack_ompi_spec.stdout}}
            prefix: {{spack_ompi_dir.stdout}}
          buildable: false
    dest: /tmp/ompi.yaml
  when:
     ansible_local.citc.csp == "google"
 
- name: Spack note OpenMPI - import
  command: /mnt/shared/spack/bin/spack config --scope system add -f /tmp/ompi.yaml
  when:
     ansible_local.citc.csp == "google"

- name: Spack note OpenMPI - delete
  file:
    path: /tmp/ompi.yaml
    state: absent
  when:
     ansible_local.citc.csp == "google"



- name: Add Spack to default shells
  copy:
    dest: /etc/profile.d/99-spack.sh
    content: |
      . /mnt/shared/spack/share/spack/setup-env.sh
    owner: root
    mode: u=rwx,g=rx,o=rx
    force: no
